<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <!--在web.config配置自定义节点-->
  <configSections>
    <!--定义sectionGroup节点,这个配置节相当于所有section配置节的命名空间,充当 section 元素的容器-->
    <sectionGroup name="TestSectionGroup">
      <!--定义section配置节,通过这个配置节设置自定义节点的名称和处理configSection的类   注意:这个类必须继承IConfigurationSectionHandler-->
      <section name="TestSection" type="Web.App_Code.TestSection" />
    </sectionGroup>
  </configSections>

  <!--自定义配置的节点-->
  <TestSectionGroup>
    <TestSection>
      <add key="name" value="测试:name"/>
      <add key="version" value="测试：version"/>
    </TestSection>
  </TestSectionGroup>


  <!--数据库连接字符串设置-->
  <connectionStrings>
    <add name="ConnString" connectionString="Data Source=GAO;Initial Catalog=HBWXDate;User ID=sa;password=sa"></add>
  </connectionStrings>

  <!--appSettings是应用程序设置,可以定义应用程序的全局常量设置等信息-->
  <appSettings>
    <add key="webpages:Version" value="3.0.0.0" />
    <add key="webpages:Enabled" value="false" />
    <add key="ClientValidationEnabled" value="true" />
    <add key="UnobtrusiveJavaScriptEnabled" value="true" />
  </appSettings>

  <!--控制asp.net运行时的行为-->
  <system.web>
    <compilation debug="true" targetFramework="4.5.2" />
    <httpRuntime targetFramework="4.5.2" />
    <httpModules>
      <add name="ApplicationInsightsWebTracking" type="Microsoft.ApplicationInsights.Web.ApplicationInsightsHttpModule, Microsoft.AI.Web" />
    </httpModules>
  </system.web>

  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="Newtonsoft.Json" culture="neutral" publicKeyToken="30ad4fe6b2a6aeed" />
        <bindingRedirect oldVersion="0.0.0.0-6.0.0.0" newVersion="6.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Optimization" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="1.0.0.0-1.1.0.0" newVersion="1.1.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="WebGrease" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="0.0.0.0-1.5.2.14234" newVersion="1.5.2.14234" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Helpers" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="1.0.0.0-3.0.0.0" newVersion="3.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.WebPages" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="1.0.0.0-3.0.0.0" newVersion="3.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Mvc" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="1.0.0.0-5.2.3.0" newVersion="5.2.3.0" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>

  <!--告诉.Net Framework 该用哪个版本的编译器来编译代码。如果web.config中没有<system.codedom>标签的配置，那么.Net Framework 默认使用的是2.0版本的编译器-->
  <system.codedom>
    <compilers>
      <!--设置C#语言该用什么版本的编译器来编译-->
      <compiler language="c#;cs;csharp" extension=".cs" type="Microsoft.CodeDom.Providers.DotNetCompilerPlatform.CSharpCodeProvider, Microsoft.CodeDom.Providers.DotNetCompilerPlatform, Version=1.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" warningLevel="4" compilerOptions="/langversion:6 /nowarn:1659;1699;1701" />
      <!--设置vb语言该用什么版本的编译器来编译-->
      <compiler language="vb;vbs;visualbasic;vbscript" extension=".vb" type="Microsoft.CodeDom.Providers.DotNetCompilerPlatform.VBCodeProvider, Microsoft.CodeDom.Providers.DotNetCompilerPlatform, Version=1.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" warningLevel="4" compilerOptions="/langversion:14 /nowarn:41008 /define:_MYTYPE=\&quot;Web\&quot; /optionInfer+" />
    </compilers>
  </system.codedom>

  <!--该节使 IIS 7.0 在【集成模式】下运行时可使用这些处理程序和模块。在iis7.0 下运行 ASP.NET AJAX 需要 system.webServer节。对早期版本的 IIS 来说则不需要此节。 -->
  <system.webServer>
    <!--这个主要作用是设置不检测 <system.web>中的配置 -->
    <validation validateIntegratedModeConfiguration="false" />
    <!--当请求 URL 未包含 Web 应用程序的特定文件时，IIS 7.0 将提供一个默认文件。好像是设置默认页的。-->
    <defaultDocument>
      <files>
        <!--<add value="/Home/Test" />-->
      </files>
    </defaultDocument>
    <!--每次请求时都会调用托管代码模块，通过该模块可对【请求】或【响应】进行自定义。-->
    <modules>
      <remove name="ApplicationInsightsWebTracking" />
      <add name="ApplicationInsightsWebTracking" type="Microsoft.ApplicationInsights.Web.ApplicationInsightsHttpModule, Microsoft.AI.Web" preCondition="managedHandler" />
    </modules>
  </system.webServer>

</configuration>
